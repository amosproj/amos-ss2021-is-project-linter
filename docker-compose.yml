version: "3.8"

services:
    database:
        container_name: "amos-linter-postgres-db"
        image: "postgres:alpine"
        restart: always
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
        volumes:
            - postgres-data:/var/lib/postgresql/data
        expose:
            - 5432

    backend:
        container_name: "amos-linter-java-server"
        image: "amoslinter/server:${ENVIRONMENT}"
        environment:
            - spring.datasource.platform=postgres
            - spring.datasource.url=jdbc:postgresql://database:5432/${DB_NAME}
            - spring.datasource.username=${DB_USER}
            - spring.datasource.password=${DB_PASSWORD}
            - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
            - GITLAB_ACCESS_TOKEN=${GITLAB_ACCESS_TOKEN}
            - server.port=8080
            - CONFIG_FILE=/home/amos/config.json
        volumes: # more like: load nginx configuration
            - ./config.json:/home/amos/config.json
        depends_on:
            - database
        expose:
            - 8080

    nginx:
        container_name: "amos-linter-nginx"
        image: "amoslinter/frontend:${ENVIRONMENT}"
        volumes: # more like: load nginx configuration
            - ${NGINX_CONFIG}:/etc/nginx/templates/default.conf.template
            - ${SSL_CERTIFICATE:-/dev/null}:/ssl/fullchain.pem
            - ${SSL_CERTIFICATE_KEY:-/dev/null}:/ssl/privkey.pem
        environment:
            - HOST=${HOST:-localhost}
        depends_on:
            - backend
        ports: # only connection to outside world
            - 6969:80
            - 80:80
            - 443:443
        links:
            - backend

volumes:
    postgres-data:
